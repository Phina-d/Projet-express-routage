// üì¶ Charge les variables d‚Äôenvironnement depuis .env (ex : PORT, CHECK_WORKING_HOURS)
require('dotenv').config();

// üìÅ Importe les modules n√©cessaires
const express = require('express');
const app = express();
const path = require('path');
const expressLayouts = require('express-ejs-layouts');

// üîê Active ou non le middleware des heures ouvrables en fonction du .env
const checkWorkingHours = process.env.CHECK_WORKING_HOURS === 'true';

// üìå Middleware par d√©faut (aucune restriction si d√©sactiv√©)
let workingHoursMiddleware = (req, res, next) => next();

// ‚úÖ Si l‚Äôoption est activ√©e, utilise le vrai middleware
if (checkWorkingHours) {
  workingHoursMiddleware = require('./middleware/workingHours');
}

// üåê Sert les fichiers statiques du dossier /public (CSS, JS, images...)
app.use(express.static(path.join(__dirname, 'public')));

// üì® Permet de r√©cup√©rer les donn√©es POST (formulaires)
app.use(express.urlencoded({ extended: true }));

// ‚è∞ Middleware pour restreindre l'acc√®s en dehors des heures ouvrables
app.use(workingHoursMiddleware);

// üß± Configuration du moteur de templates EJS
app.set('view engine', 'ejs');
app.use(expressLayouts);
app.set('layout', 'layout'); // Fichier layout.ejs comme mod√®le principal

// üîΩ D√©claration des routes principales

// Page d'accueil
app.get('/', (req, res) => {
  res.render('index', { title: 'Accueil' });
});

// Page services
app.get('/services', (req, res) => {
  res.render('services', { title: 'Nos services' });
});

// Page de contact (GET)
app.get('/contact', (req, res) => {
  res.render('contact', { title: 'Contactez-nous', messageSent: false });
});

// Traitement du formulaire de contact (POST)
app.post('/contact', (req, res) => {
  const { name, email, message } = req.body;
  console.log('Nouveau message:', name, email, message);

  // R√©affiche la page contact avec un message de confirmation
  res.render('contact', { title: 'Contactez-nous', messageSent: true });
});

// üöÄ D√©marrage du serveur sur le port d√©fini (par d√©faut 3000)
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`Serveur d√©marr√© sur http://localhost:${PORT}`);
});
